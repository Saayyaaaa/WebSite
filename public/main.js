// main.js

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã Leaflet
function initMap() {
    const map = L.map('map').setView([43.2389, 76.8897], 12);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);
    L.marker([43.2389, 76.8897])
      .addTo(map)
      .bindPopup('<b>–†–∏—Ç—Ü –ö–∞—Ä–ª—Ç–æ–Ω –ê–ª–º–∞—Ç—ã</b><br>–†–µ–π—Ç–∏–Ω–≥: ‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ');
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
function openModal(id) {
    document.getElementById(id + "Modal").style.display = "flex";
}

function closeModal(id) {
    document.getElementById(id + "Modal").style.display = "none";
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function updateAuthUI() {
    const authArea = document.getElementById("authArea");
    const user = JSON.parse(localStorage.getItem("user"));

    if (user) {
        authArea.innerHTML = `
      <span style="color: black; margin-right: 1rem;">üë§ ${user.login}</span>
      <button onclick="logout()">–í—ã–π—Ç–∏</button>
    `;
    } else {
        authArea.innerHTML = `
      <button onclick="openModal('register')"><i class="fas fa-user-plus"></i> –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</button>
      <button onclick="openModal('login')"><i class="fas fa-sign-in-alt"></i> –í–æ–π—Ç–∏</button>
    `;
    }
}

// –í—ã—Ö–æ–¥
function logout() {
    localStorage.removeItem("user");
    updateAuthUI();
}

// –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
function goToPayment(id, title) {
    const params = new URLSearchParams({ hotelId: id, hotelTitle: title });
    window.location.href = `payment.html?${params.toString()}`;
}

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –æ—Ç–µ–ª–µ–π
let hotelsData = [];

// –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–µ–ª–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞
async function loadHotels() {
    try {
        const res = await fetch('/api/hotels');
        if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ' + res.status);
        return await res.json();
    } catch (err) {
        console.error(err);
        document.getElementById('hotels').innerHTML = '<p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç–µ–ª–∏.</p>';
        return [];
    }
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –æ—Ç–µ–ª–µ–π
function renderHotels(list) {
    const hotelGrid = document.getElementById('hotels');
    hotelGrid.innerHTML = '';

    if (list.length === 0) {
        hotelGrid.innerHTML = '<p>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</p>';
        return;
    }

    list.forEach(hotel => {
        const card = document.createElement('div');
        card.className = 'hotel-card';

        card.innerHTML = `
      <div class="hotel-image" style="background-image: url('${hotel.image}')"></div>
      <div class="hotel-info">
        <h3>${hotel.title}</h3>
        <div class="hotel-rating">${hotel.rating}</div>
        <p>${hotel.description}</p>
        <div class="hotel-price">${hotel.price}</div>
        <button class="book-button">–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å</button>
      </div>
    `;

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        const btn = card.querySelector('.book-button');
        btn.addEventListener('click', () => goToPayment(hotel.id, hotel.title));

        hotelGrid.appendChild(card);
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', async () => {
    updateAuthUI();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
    initMap();

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –æ—Ç–µ–ª–µ–π
    hotelsData = await loadHotels();
    renderHotels(hotelsData);

    // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    const form = document.getElementById('filterForm');
    const nameInput = document.getElementById('searchName');
    form.addEventListener('submit', e => {
        e.preventDefault();
        const q = nameInput.value.trim().toLowerCase();
        const filtered = hotelsData.filter(h => h.title.toLowerCase().includes(q));
        renderHotels(filtered);
    });
});

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
document.getElementById("registerForm")?.addEventListener("submit", async (e) => {
    e.preventDefault();
    const name = document.getElementById("regName").value.trim();
    const login = document.getElementById("regLogin").value.trim();
    const password = document.getElementById("regPassword").value;
    const confirm = document.getElementById("regConfirm").value;

    if (!name || !login || !password || !confirm) {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.");
        return;
    }
    if (password !== confirm) {
        alert("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!");
        return;
    }

    try {
        const response = await fetch("/api/register", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ name, login, password }),
        });
        const data = await response.json();
        if (response.ok) {
            alert(data.message);
            document.getElementById("registerForm").reset();
            closeModal("register");
        } else {
            alert(data.message || "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏");
        }
    } catch (err) {
        alert("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É");
        console.error(err);
    }
});

// –í—Ö–æ–¥
document.getElementById("loginForm")?.addEventListener("submit", async (e) => {
    e.preventDefault();
    const login = document.getElementById("loginLogin").value.trim();
    const password = document.getElementById("loginPassword").value;

    if (!login || !password) {
        alert("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å");
        return;
    }

    try {
        const response = await fetch("/api/login", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ login, password }),
        });
        const data = await response.json();
        if (response.ok) {
            localStorage.setItem("user", JSON.stringify(data.user));
            alert(data.message);
            document.getElementById("loginForm").reset();
            closeModal("login");
            updateAuthUI();
        } else {
            alert(data.message || "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞");
        }
    } catch (err) {
        alert("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É");
        console.error(err);
    }
});